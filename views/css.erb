  <style type="text/css">
    body {
      font-family: sans-serif;
      font-size: 11px;
    }
    table, tr, td, th {
      font-size: 100%
    }
    th, td {
      padding: 1px 5px 1px 1px;
      text-align: left;
      white-space: nowrap;
    }
    table.legend {
      margin-bottom: 1.2em;
    }
    table.legend td {
      padding-right: 10px;
    }
    table.stats {
      table-layout: fixed;
    }
    table.stats th,
    table.stats td {
      overflow-x: hidden;
    }
    table.stats th:nth-child(1), table.stats td:nth-child(1) { width: 120px; min-width: 120px; max-width: 120px; }
    table.stats th:nth-child(2), table.stats td:nth-child(2) { width: 85px;  min-width: 85px;  max-width: 85px; }
    table.stats th:nth-child(3), table.stats td:nth-child(3) { width: 105px; min-width: 105px; max-width: 105px; }
    table.stats th:nth-child(4), table.stats td:nth-child(4) { width: 150px; min-width: 150px; max-width: 150px; }
    table.stats th:nth-child(5), table.stats td:nth-child(5) { width: 55px;  min-width: 55px;  max-width: 55px; }
    table.stats th:nth-child(6), table.stats td:nth-child(6) { width: 100px; min-width: 100px; max-width: 100px; }
    table.stats th:nth-child(7), table.stats td:nth-child(7) { width: 100px; min-width: 100px; max-width: 100px; }
    table.stats th:nth-child(8), table.stats td:nth-child(8) { width: 100px; min-width: 100px; max-width: 100px; }
    /* table.stats th:nth-child(8), table.stats td:nth-child(8) { width: 400px; min-width: 400px; max-width: 400px; } */
    table.stats tr:hover td {
      background: #eee;
    }
    table .r {
      text-align: right;
    }
    span.mbar-cur {
      background: #777;
      display: inline-block;
      height: 6px;
    }
    span.mbar-max {
      background: #bbb;
      display: inline-block;
      height: 6px;
    }
    span.mbar-req {
      background: #b00;
      display: inline-block;
      height: 6px;
    }
    p.mem-chart {
      font-size: 1px;
      line-height: 1px;
    }
    p.mem-chart span.entry {
      vertical-align: bottom;
      display: inline-block;
    }
    p.mem-chart span.entry span {
      vertical-align: bottom;
    }
    input.filter {
      font-size: 11px;
      width: 90%;
      border: 1px solid #aaa;
      padding: 0;
    }
    form {
      padding: 0;
      margin: 0;
    }
    table.total-cluster-mbar {
      margin-bottom: 1.2em;
    }
    table.total-cluster-mbar th,
    table.total-cluster-mbar td {
      padding-right: 0;
    }
    table.total-cluster-mbar td + td {
      padding-left: 0;
    }
  </style>

  <script src="//ajax.googleapis.com/ajax/libs/mootools/1.4.5/mootools-yui-compressed.js"></script>
  <script type="text/javascript">
  (function(){

    var tableUpdateTimeout = null;
    function scheduleUpdateTableFilter() {
      if (tableUpdateTimeout) window.clearTimeout(tableUpdateTimeout);
      tableUpdateTimeout = window.setTimeout(updateTableFilter, 500);
    }
    function updateTableFilter() {
      if (tableUpdateTimeout) window.clearTimeout(tableUpdateTimeout);

      if (window.console && window.console.log) {
        window.console.log('Filtering table...');
      }

      var td = $('table-filter-input-row').firstChild;
      var cols = 0;
      var filters = [];
      var filter_data = [];
      while (td) {
        if (td.nodeName=='TD') {
          var input = td.firstChild;
          if (input && input.nodeName=='INPUT') {
            if (input.value!='') {
              filters[cols] = input.value.toLowerCase();
              filter_data.push(input.name+'='+encodeURIComponent(input.value));
            }
          }
          cols++;
        }
        td = td.nextSibling;
      }

      if (window.history && window.history.replaceState) {
        window.history.replaceState({}, '', '?'+filter_data.join('&'));
      }

      var form = $('table-filter');
      form.style.display = 'none';

      var tr = $$('#table-filter tbody')[0].firstChild;
      while (tr) {
        if (tr.nodeName=='TR') {
          var matching = true;
          if (tr.cachedFields) {
            for (var i=0; i<cols; i++) {
              if (filters[i] && !tr.cachedFields[i].contains(filters[i])) {
                matching = false; break;
              }
            }
          } else {
            var td = tr.firstChild;
            var col = 0;
            var t;
            var cachedFields = [];
            while (td) {
              if (td.nodeName=='TD') {
                t = td;
                if (t && t.firstChild) t = t.firstChild;
                if (t && t.nodeName == 'A') t = t.firstChild;
                t = (t && t.nodeValue) ? t.nodeValue : '';
                t = t.toLowerCase();
                cachedFields.push(t);
                if (filters[col] && !t.contains(filters[col])) {
                  matching = false;
                }
                col++;
              }
              td = td.nextSibling;
            }
            tr.cachedFields = cachedFields;
          }
          tr.style.display = (matching ? '' : 'none');
        }
        tr = tr.nextSibling;
      }

      form.style.display = '';
    }

    function appendCurrentFilterToLink(e) {
      var targ;
      if (!e) var e = window.event;
      if (e.target) targ = e.target;
      else if (e.srcElement) targ = e.srcElement;
      if (targ.className == 'date-nav-link') {
        targ.href = targ.href.replace(/\?.+$/, '') + window.location.search;
      }
    }

    window.addEvent('domready', function() {
      $('table-filter').onsubmit = function() { updateTableFilter(); return false; };
      $$('#table-filter input.filter').addEvent('keyup',  scheduleUpdateTableFilter);
      $$('#table-filter input.filter').addEvent('click',  scheduleUpdateTableFilter);
      $$('#table-filter input.filter').addEvent('change', scheduleUpdateTableFilter);
      $('date-nav-links').addEvent('click', appendCurrentFilterToLink);
      updateTableFilter();

      window.setTimeout(function() { window.location.href = window.location.href; }, 60000);
    });

  })();
  </script>

